{
  "Resources": {
    "BooksTable9DF4AE31": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "booksInformartion"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/BooksTable/Resource"
      }
    },
    "BooksnewTable4AEF819E": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "bookInfo"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/BooksnewTable/Resource"
      }
    },
    "HelloHandlerServiceRole11EF7C63": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/HelloHandler/ServiceRole/Resource"
      }
    },
    "HelloHandler2E4FBA4D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3Bucket296F61E0"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "hello.handler",
        "Role": {
          "Fn::GetAtt": [
            "HelloHandlerServiceRole11EF7C63",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "HelloHandlerServiceRole11EF7C63"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/HelloHandler/Resource",
        "aws:asset:path": "asset.92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2",
        "aws:asset:property": "Code"
      }
    },
    "BooksHandlerServiceRole5B6A8847": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/BooksHandler/ServiceRole/Resource"
      }
    },
    "BooksHandler3EB83358": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3Bucket296F61E0"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "books.handler",
        "Role": {
          "Fn::GetAtt": [
            "BooksHandlerServiceRole5B6A8847",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "BooksHandlerServiceRole5B6A8847"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/BooksHandler/Resource",
        "aws:asset:path": "asset.92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2",
        "aws:asset:property": "Code"
      }
    },
    "WriteHandlerServiceRole53B5A6A6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/WriteHandler/ServiceRole/Resource"
      }
    },
    "WriteHandlerServiceRoleDefaultPolicy7E3B8B6C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "BooksnewTable4AEF819E",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WriteHandlerServiceRoleDefaultPolicy7E3B8B6C",
        "Roles": [
          {
            "Ref": "WriteHandlerServiceRole53B5A6A6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/WriteHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "WriteHandler5B025288": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3Bucket296F61E0"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "writetodb.handler",
        "Role": {
          "Fn::GetAtt": [
            "WriteHandlerServiceRole53B5A6A6",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "WriteHandlerServiceRoleDefaultPolicy7E3B8B6C",
        "WriteHandlerServiceRole53B5A6A6"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/WriteHandler/Resource",
        "aws:asset:path": "asset.92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2",
        "aws:asset:property": "Code"
      }
    },
    "HardWriteHandlerServiceRoleB60F037C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/HardWriteHandler/ServiceRole/Resource"
      }
    },
    "HardWriteHandlerServiceRoleDefaultPolicy516475E3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "BooksTable9DF4AE31",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "HardWriteHandlerServiceRoleDefaultPolicy516475E3",
        "Roles": [
          {
            "Ref": "HardWriteHandlerServiceRoleB60F037C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/HardWriteHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "HardWriteHandler55554B3D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3Bucket296F61E0"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "hardwritetodb.handler",
        "Role": {
          "Fn::GetAtt": [
            "HardWriteHandlerServiceRoleB60F037C",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "HardWriteHandlerServiceRoleDefaultPolicy516475E3",
        "HardWriteHandlerServiceRoleB60F037C"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/HardWriteHandler/Resource",
        "aws:asset:path": "asset.92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2",
        "aws:asset:property": "Code"
      }
    },
    "myapigateway715DB67F": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "myapigateway"
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Resource"
      }
    },
    "myapigatewayCloudWatchRoleB23082DB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/CloudWatchRole/Resource"
      }
    },
    "myapigatewayAccount4700FD79": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "myapigatewayCloudWatchRoleB23082DB",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "myapigateway715DB67F"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Account"
      }
    },
    "myapigatewayDeploymentCC10B80Edfdef8fc7ebd3c7f07d5fb5d46147c30": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "myapigatewayANYFB32EC47",
        "myapigatewaybooksGETAB64D9E5",
        "myapigatewaybooksPOSTA0320B86",
        "myapigatewaybooks65AD86A4",
        "myapigatewayhelloGETCD9DD78E",
        "myapigatewayhelloPOST9D8AFEE7",
        "myapigatewayhello1FAC2281"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Deployment/Resource"
      }
    },
    "myapigatewayDeploymentStageprodE9DCA402": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        },
        "DeploymentId": {
          "Ref": "myapigatewayDeploymentCC10B80Edfdef8fc7ebd3c7f07d5fb5d46147c30"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/DeploymentStage.prod/Resource"
      }
    },
    "myapigatewayANYFB32EC47": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "myapigateway715DB67F",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/ANY/Resource"
      }
    },
    "myapigatewayhello1FAC2281": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "myapigateway715DB67F",
            "RootResourceId"
          ]
        },
        "PathPart": "hello",
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/hello/Resource"
      }
    },
    "myapigatewayhelloGETApiPermissionServerlessWithCdkStack1myapigateway198B4D84GEThelloF0722A95": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHandler2E4FBA4D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapigateway715DB67F"
              },
              "/",
              {
                "Ref": "myapigatewayDeploymentStageprodE9DCA402"
              },
              "/GET/hello"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/hello/GET/ApiPermission.ServerlessWithCdkStack1myapigateway198B4D84.GET..hello"
      }
    },
    "myapigatewayhelloGETApiPermissionTestServerlessWithCdkStack1myapigateway198B4D84GEThello9D8B06B8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHandler2E4FBA4D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapigateway715DB67F"
              },
              "/test-invoke-stage/GET/hello"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/hello/GET/ApiPermission.Test.ServerlessWithCdkStack1myapigateway198B4D84.GET..hello"
      }
    },
    "myapigatewayhelloGETCD9DD78E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "myapigatewayhello1FAC2281"
        },
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HelloHandler2E4FBA4D",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/hello/GET/Resource"
      }
    },
    "myapigatewayhelloPOSTApiPermissionServerlessWithCdkStack1myapigateway198B4D84POSThello97FADB2D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HardWriteHandler55554B3D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapigateway715DB67F"
              },
              "/",
              {
                "Ref": "myapigatewayDeploymentStageprodE9DCA402"
              },
              "/POST/hello"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/hello/POST/ApiPermission.ServerlessWithCdkStack1myapigateway198B4D84.POST..hello"
      }
    },
    "myapigatewayhelloPOSTApiPermissionTestServerlessWithCdkStack1myapigateway198B4D84POSThello9A1AF0CE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HardWriteHandler55554B3D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapigateway715DB67F"
              },
              "/test-invoke-stage/POST/hello"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/hello/POST/ApiPermission.Test.ServerlessWithCdkStack1myapigateway198B4D84.POST..hello"
      }
    },
    "myapigatewayhelloPOST9D8AFEE7": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "myapigatewayhello1FAC2281"
        },
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HardWriteHandler55554B3D",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/hello/POST/Resource"
      }
    },
    "myapigatewaybooks65AD86A4": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "myapigateway715DB67F",
            "RootResourceId"
          ]
        },
        "PathPart": "books",
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/books/Resource"
      }
    },
    "myapigatewaybooksGETApiPermissionServerlessWithCdkStack1myapigateway198B4D84GETbooksFD986CC1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BooksHandler3EB83358",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapigateway715DB67F"
              },
              "/",
              {
                "Ref": "myapigatewayDeploymentStageprodE9DCA402"
              },
              "/GET/books"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/books/GET/ApiPermission.ServerlessWithCdkStack1myapigateway198B4D84.GET..books"
      }
    },
    "myapigatewaybooksGETApiPermissionTestServerlessWithCdkStack1myapigateway198B4D84GETbooksB3E1CE75": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BooksHandler3EB83358",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapigateway715DB67F"
              },
              "/test-invoke-stage/GET/books"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/books/GET/ApiPermission.Test.ServerlessWithCdkStack1myapigateway198B4D84.GET..books"
      }
    },
    "myapigatewaybooksGETAB64D9E5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "myapigatewaybooks65AD86A4"
        },
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BooksHandler3EB83358",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/books/GET/Resource"
      }
    },
    "myapigatewaybooksPOSTApiPermissionServerlessWithCdkStack1myapigateway198B4D84POSTbooksD893DFF0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "WriteHandler5B025288",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapigateway715DB67F"
              },
              "/",
              {
                "Ref": "myapigatewayDeploymentStageprodE9DCA402"
              },
              "/POST/books"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/books/POST/ApiPermission.ServerlessWithCdkStack1myapigateway198B4D84.POST..books"
      }
    },
    "myapigatewaybooksPOSTApiPermissionTestServerlessWithCdkStack1myapigateway198B4D84POSTbooksAA264391": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "WriteHandler5B025288",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapigateway715DB67F"
              },
              "/test-invoke-stage/POST/books"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/books/POST/ApiPermission.Test.ServerlessWithCdkStack1myapigateway198B4D84.POST..books"
      }
    },
    "myapigatewaybooksPOSTA0320B86": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "myapigatewaybooks65AD86A4"
        },
        "RestApiId": {
          "Ref": "myapigateway715DB67F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WriteHandler5B025288",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/myapigateway/Default/books/POST/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.75.0,@aws-cdk/assets=1.75.0,@aws-cdk/aws-apigateway=1.75.0,@aws-cdk/aws-applicationautoscaling=1.75.0,@aws-cdk/aws-autoscaling-common=1.75.0,@aws-cdk/aws-cloudwatch=1.75.0,@aws-cdk/aws-codeguruprofiler=1.75.0,@aws-cdk/aws-dynamodb=1.75.0,@aws-cdk/aws-ec2=1.75.0,@aws-cdk/aws-events=1.75.0,@aws-cdk/aws-iam=1.75.0,@aws-cdk/aws-kms=1.75.0,@aws-cdk/aws-lambda=1.75.0,@aws-cdk/aws-logs=1.75.0,@aws-cdk/aws-s3=1.75.0,@aws-cdk/aws-s3-assets=1.75.0,@aws-cdk/aws-sqs=1.75.0,@aws-cdk/aws-ssm=1.75.0,@aws-cdk/cloud-assembly-schema=1.75.0,@aws-cdk/core=1.75.0,@aws-cdk/custom-resources=1.75.0,@aws-cdk/cx-api=1.75.0,@aws-cdk/region-info=1.75.0,jsii-runtime=node.js/v12.19.1"
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessWithCdkStack1/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3Bucket296F61E0": {
      "Type": "String",
      "Description": "S3 bucket for asset \"92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2\""
    },
    "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2S3VersionKey23933863": {
      "Type": "String",
      "Description": "S3 key for asset version \"92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2\""
    },
    "AssetParameters92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2ArtifactHash4B5C03A9": {
      "Type": "String",
      "Description": "Artifact hash for asset \"92a66f1fc95e0c6d08d204f23fa841de700946a6cd1df477860a0b3ede3f4bc2\""
    }
  },
  "Outputs": {
    "myapigatewayEndpoint7385044F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "myapigateway715DB67F"
            },
            ".execute-api.us-west-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "myapigatewayDeploymentStageprodE9DCA402"
            },
            "/"
          ]
        ]
      }
    }
  }
}